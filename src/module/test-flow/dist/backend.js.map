{"version":3,"sources":["webpack://egg-born-module-test-flow/./backend/src/aops.js","webpack://egg-born-module-test-flow/./backend/src/bean/atom.product.js","webpack://egg-born-module-test-flow/./backend/src/bean/atom.purchaseOrder.js","webpack://egg-born-module-test-flow/./backend/src/bean/detail.purchaseOrder.js","webpack://egg-born-module-test-flow/./backend/src/bean/flow.service.startEventTimer.js","webpack://egg-born-module-test-flow/./backend/src/bean/flow.service.test.js","webpack://egg-born-module-test-flow/./backend/src/bean/version.manager.js","webpack://egg-born-module-test-flow/./backend/src/beans.js","webpack://egg-born-module-test-flow/./backend/src/config/config.js","webpack://egg-born-module-test-flow/./backend/src/config/errors.js","webpack://egg-born-module-test-flow/./backend/src/config/locale/en-us.js","webpack://egg-born-module-test-flow/./backend/src/config/locale/zh-cn.js","webpack://egg-born-module-test-flow/./backend/src/config/locales.js","webpack://egg-born-module-test-flow/./backend/src/config/static/flowDef/listener/set00_activityService.spec.js","webpack://egg-born-module-test-flow/./backend/src/config/static/flowDef/listener/set00_edgeSequence.spec.js","webpack://egg-born-module-test-flow/./backend/src/config/static/flowDef/listener/set00_simple.spec.js","webpack://egg-born-module-test-flow/./backend/src/config/static/flowDef/listener/set01_atomUserTask.spec.js","webpack://egg-born-module-test-flow/./backend/src/config/static/flowDef/listener/set01_startEventAtom.spec.js","webpack://egg-born-module-test-flow/./backend/src/config/static/flowDef/set00_activityNone.js","webpack://egg-born-module-test-flow/./backend/src/config/static/flowDef/set00_activityService.js","webpack://egg-born-module-test-flow/./backend/src/config/static/flowDef/set00_edgeSequence.js","webpack://egg-born-module-test-flow/./backend/src/config/static/flowDef/set00_simple.js","webpack://egg-born-module-test-flow/./backend/src/config/static/flowDef/set01_atomAssigneesConfirmation.js","webpack://egg-born-module-test-flow/./backend/src/config/static/flowDef/set01_atomUserTask.js","webpack://egg-born-module-test-flow/./backend/src/config/static/flowDef/set01_startEventAtom.js","webpack://egg-born-module-test-flow/./backend/src/config/static/flowDefs.js","webpack://egg-born-module-test-flow/./backend/src/config/static/products.js","webpack://egg-born-module-test-flow/./backend/src/config/static/resources.js","webpack://egg-born-module-test-flow/./backend/src/config/validation/keywords.js","webpack://egg-born-module-test-flow/./backend/src/config/validation/schema/product.js","webpack://egg-born-module-test-flow/./backend/src/config/validation/schema/purchaseOrder.js","webpack://egg-born-module-test-flow/./backend/src/config/validation/schema/purchaseOrderDetail.js","webpack://egg-born-module-test-flow/./backend/src/config/validation/schemas.js","webpack://egg-born-module-test-flow/./backend/src/controller/flow.js","webpack://egg-born-module-test-flow/./backend/src/controllers.js","webpack://egg-born-module-test-flow/./backend/src/main.js","webpack://egg-born-module-test-flow/./backend/src/meta.js","webpack://egg-born-module-test-flow/./backend/src/model/product.js","webpack://egg-born-module-test-flow/./backend/src/model/purchaseOrder.js","webpack://egg-born-module-test-flow/./backend/src/model/purchaseOrderDetail.js","webpack://egg-born-module-test-flow/./backend/src/models.js","webpack://egg-born-module-test-flow/./backend/src/routes.js","webpack://egg-born-module-test-flow/./backend/src/services.js","webpack://egg-born-module-test-flow/external \"require3\"","webpack://egg-born-module-test-flow/webpack/bootstrap","webpack://egg-born-module-test-flow/webpack/startup"],"names":[],"mappings":";;;;;;AAAA;AACA;AACA;AACA;;;;;;;;ACHA;;AAEA;;AAEA,kBAAkB,wBAAwB;AAC1C;AACA,sCAAsC,wBAAwB;AAC9D;AACA;AACA;AACA,OAAO;AACP;AACA,cAAc;AACd;;AAEA,gBAAgB,gCAAgC;AAChD;AACA,qCAAqC,gCAAgC;AACrE;AACA;AACA;AACA;AACA;AACA;;AAEA,kBAAkB,kCAAkC;AACpD;AACA,0BAA0B,kCAAkC;AAC5D;AACA;AACA;AACA;AACA;;AAEA,iBAAiB,8CAA8C;AAC/D;AACA,yBAAyB,8CAA8C;AACvE;AACA;AACA;AACA;AACA;;AAEA,kBAAkB,uBAAuB;AACzC;AACA;AACA;AACA,OAAO;AACP;AACA,0BAA0B,uBAAuB;AACjD;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;;;;;;;;ACrEA;;AAEA;;AAEA,kBAAkB,wBAAwB;AAC1C;AACA,sCAAsC,wBAAwB;AAC9D;AACA;AACA;AACA,OAAO;AACP;AACA,cAAc;AACd;;AAEA,gBAAgB,gCAAgC;AAChD;AACA,qCAAqC,gCAAgC;AACrE;AACA;AACA;AACA;AACA;AACA;;AAEA,kBAAkB,kCAAkC;AACpD;AACA,0BAA0B,kCAAkC;AAC5D;AACA;AACA;AACA;AACA;;AAEA,iBAAiB,8CAA8C;AAC/D;AACA,yBAAyB,8CAA8C;AACvE;AACA;AACA;AACA;AACA;;AAEA,kBAAkB,uBAAuB;AACzC;AACA;AACA;AACA,OAAO;AACP;AACA,0BAA0B,uBAAuB;AACjD;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;;;;;;;;ACvEA;;AAEA;;AAEA,kBAAkB,mCAAmC;AACrD;AACA,sCAAsC,mCAAmC;AACzE;AACA;AACA;AACA;AACA,OAAO;AACP;AACA,cAAc;AACd;;AAEA,gBAAgB,kCAAkC;AAClD;AACA,qCAAqC,kCAAkC;AACvE;AACA;AACA;AACA;AACA;AACA;;AAEA,kBAAkB,6CAA6C;AAC/D;AACA,0BAA0B,6CAA6C;AACvE;AACA;AACA;AACA;AACA;;AAEA,iBAAiB,gDAAgD;AACjE;AACA,yBAAyB,gDAAgD;AACzE;AACA;AACA;AACA;AACA;AACA;;AAEA,kBAAkB,iCAAiC;AACnD;AACA;AACA;AACA,OAAO;AACP;AACA,0BAA0B,iCAAiC;AAC3D;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;;;;;;;;AC1EA;AACA;AACA;AACA;AACA,aAAa,6BAA6B;AAC1C;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;;;;;;;;ACfA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;ACZA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA,WAAW,8CAA8C;AACzD,WAAW,2DAA2D;AACtE,WAAW,4DAA4D;AACvE,WAAW,6DAA6D;AACxE,WAAW,4DAA4D;AACvE,WAAW,kDAAkD;AAC7D,WAAW,kDAAkD;AAC7D,WAAW,kEAAkE;AAC7E;AACA,oDAAoD,6CAA6C;AACjG;AACA;AACA;AACA;AACA,WAAW,8CAA8C;AACzD,WAAW,2DAA2D;AACtE,WAAW,4DAA4D;AACvE,WAAW,6DAA6D;AACxE,WAAW,4DAA4D;AACvE,WAAW,kDAAkD;AAC7D,WAAW,kDAAkD;AAC7D,WAAW,kEAAkE;AAC7E;AACA,oDAAoD,uCAAuC;AAC3F;AACA;;AAEA;AACA;;AAEA;;AAEA;AACA;;;;;;;;ACzGA,uBAAuB,mBAAO,CAAC,GAA2B;AAC1D,0BAA0B,mBAAO,CAAC,GAA8B;AAChE,oBAAoB,mBAAO,CAAC,GAAwB;AACpD,4BAA4B,mBAAO,CAAC,GAAgC;AACpE,wBAAwB,mBAAO,CAAC,GAA6B;AAC7D,mCAAmC,mBAAO,CAAC,GAAwC;;AAEnF;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;;;;;;;;ACzCA;AACA;AACA;AACA;AACA;;;;;;;;ACJA;AACA;AACA;;;;;;;;ACFA;AACA;AACA;;;;;;;;ACFA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;ACXA;AACA,WAAW,mBAAO,CAAC,GAAmB;AACtC,WAAW,mBAAO,CAAC,EAAmB;AACtC;;;;;;;;ACHA,iBAAiB,mBAAO,CAAC,GAAU;AACnC;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA,OAAO;AACP;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;;;;;;;;ACnCA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;;;;;;;ACbA,iBAAiB,mBAAO,CAAC,GAAU;AACnC;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA,oCAAoC,UAAU;AAC9C;AACA;;AAEA;;;;;;;;AClEA,iBAAiB,mBAAO,CAAC,GAAU;AACnC;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA,kDAAkD,qBAAqB;AACvE;AACA;;AAEA,mDAAmD,qBAAqB;AACxE;AACA;;AAEA,oCAAoC,UAAU;AAC9C;AACA;;AAEA;;;;;;;;ACxCA,iBAAiB,mBAAO,CAAC,GAAU;AACnC;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;;;;;;;;ACfA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA,SAAS;AACT;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;AC1CA,iBAAiB,mBAAO,CAAC,GAA0C;;AAEnE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA,WAAW;AACX,SAAS;AACT;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA,SAAS;AACT;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;AC/DA,iBAAiB,mBAAO,CAAC,GAAuC;;AAEhE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW;AACX,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW;AACX,SAAS;AACT;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;ACxDA,iBAAiB,mBAAO,CAAC,GAAiC;;AAE1D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;ACnCA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA,WAAW;AACX,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA,WAAW;AACX,SAAS;AACT;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA,SAAS;AACT;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;AC1DA,iBAAiB,mBAAO,CAAC,EAAuC;;AAEhE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA,WAAW;AACX,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,mBAAmB;AACnB,iBAAiB;AACjB;AACA,aAAa;AACb,WAAW;AACX,SAAS;AACT;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA,SAAS;AACT;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;AClFA,iBAAiB,mBAAO,CAAC,GAAyC;;AAElE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA,WAAW;AACX,SAAS;AACT;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA,SAAS;AACT;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;ACrDA,qBAAqB,mBAAO,CAAC,GAA2B;AACxD,2BAA2B,mBAAO,CAAC,GAAiC;AACpE,2BAA2B,mBAAO,CAAC,GAAiC;AACpE,8BAA8B,mBAAO,CAAC,GAAoC;AAC1E;AACA,6BAA6B,mBAAO,CAAC,GAAmC;AACxE,2BAA2B,mBAAO,CAAC,GAAiC;AACpE,wCAAwC,mBAAO,CAAC,EAA8C;;AAE9F;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;ACrBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;;;;;;;;AC7BA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA,KAAK;AACL;AACA;AACA;;;;;;;;AC3DA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,2BAA2B,iFAAiF;AAC5G;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;;;;;;;;AChCA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP,KAAK;AACL;AACA;AACA;;;;;;;;ACxCA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,qEAAqE;AAChF,WAAW,iEAAiE;AAC5E,WAAW,2FAA2F;AACtG;AACA,OAAO;AACP;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW;AACX;AACA,SAAS;AACT;AACA,OAAO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW;AACX,oDAAoD,mBAAmB;AACvE,SAAS;AACT;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT,OAAO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW;AACX,SAAS;AACT,OAAO;AACP;AACA;AACA;AACA;AACA;AACA;AACA,YAAY;AACZ,UAAU;AACV;AACA;AACA;AACA;AACA;AACA;AACA;AACA,cAAc;AACd,YAAY;AACZ,UAAU;AACV,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP,KAAK;AACL;AACA;AACA;;;;;;;;ACtHA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL,qBAAqB;AACrB;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,OAAO;AACP,KAAK;AACL;AACA;AACA;;;;;;;;AC9DA,gBAAgB,mBAAO,CAAC,GAAqB;AAC7C,sBAAsB,mBAAO,CAAC,GAA2B;AACzD,4BAA4B,mBAAO,CAAC,GAAiC;;AAErE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;ACdA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;;AAEA;;AAEA;AACA;;;;;;;;;ACjBA,aAAa,mBAAO,CAAC,GAAsB;;AAE3C;AACA;AACA;AACA;AACA;AACA;;;;;;;;ACPA,eAAe,mBAAO,CAAC,EAAoB;AAC3C,gBAAgB,mBAAO,CAAC,EAAqB;AAC7C,eAAe,mBAAO,CAAC,GAAoB;;AAE3C;;AAEA;AACA,eAAe,mBAAO,CAAC,GAAW;AAClC;AACA,gBAAgB,mBAAO,CAAC,GAAY;AACpC;AACA,iBAAiB,mBAAO,CAAC,GAAa;AACtC;AACA,sBAAsB,mBAAO,CAAC,EAAkB;AAChD;AACA,mBAAmB,mBAAO,CAAC,GAAe;AAC1C;AACA,iBAAiB,mBAAO,CAAC,GAAa;AACtC;AACA,eAAe,mBAAO,CAAC,GAAW;;AAElC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;;;;;;;AClCA,iBAAiB,mBAAO,CAAC,GAAU;AACnC;;AAEA;AACA;AACA;AACA;AACA,qBAAqB,mBAAO,CAAC,GAAiC;AAC9D,oBAAoB,mBAAO,CAAC,GAAgC;AAC5D,2BAA2B,mBAAO,CAAC,GAA6B;AAChE,4BAA4B,mBAAO,CAAC,GAA8B;AAClE,2BAA2B,mBAAO,CAAC,GAA6B;AAChE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb,WAAW;AACX;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb,WAAW;AACX,SAAS;AACT;AACA;AACA;AACA,WAAW;AACX;AACA;AACA,WAAW;AACX;AACA;AACA,WAAW;AACX,SAAS;AACT,OAAO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA,aAAa;AACb;AACA,WAAW;AACX,SAAS;AACT,OAAO;AACP;AACA;AACA;AACA;AACA;AACA,WAAW;AACX;AACA;AACA,WAAW;AACX;AACA;AACA;AACA,WAAW;AACX;AACA;AACA,WAAW;AACX;AACA;AACA;AACA,WAAW;AACX,SAAS;AACT;AACA;AACA,SAAS;AACT;AACA,OAAO;AACP;AACA;AACA;AACA;AACA;AACA,SAAS;AACT,OAAO;AACP,KAAK;AACL;AACA;AACA;;;;;;;;AC1GA;AACA;AACA;AACA,kBAAkB,qCAAqC,wBAAwB,EAAE;AACjF;AACA;AACA;AACA;;;;;;;;ACPA;AACA;AACA;AACA,kBAAkB,2CAA2C,wBAAwB,EAAE;AACvF;AACA;AACA;AACA;;;;;;;;ACPA;AACA;AACA;AACA,kBAAkB,iDAAiD,wBAAwB,EAAE;AAC7F;AACA;AACA;AACA;;;;;;;;ACPA,gBAAgB,mBAAO,CAAC,GAAoB;AAC5C,sBAAsB,mBAAO,CAAC,GAA0B;AACxD,4BAA4B,mBAAO,CAAC,GAAgC;;AAEpE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;ACXA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO,qFAAqF;AAC5F;AACA;AACA;AACA;;;;;;;;ACVA;AACA;AACA;AACA;AACA;;;;;;;;;ACJA,sC;;;;;;UCAA;UACA;;UAEA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;;UAEA;UACA;;UAEA;UACA;UACA;;;;UCtBA;UACA;UACA;UACA","file":"backend.js","sourcesContent":["module.exports = app => {\n  const aops = {};\n  return aops;\n};\n","module.exports = app => {\n\n  class Atom extends app.meta.AtomBase {\n\n    async create({ atomClass, item, user }) {\n      // super\n      const key = await super.create({ atomClass, item, user });\n      // add product\n      const res = await this.ctx.model.product.insert({\n        atomId: key.atomId,\n      });\n      // return key\n      return { atomId: key.atomId, itemId: res.insertId };\n    }\n\n    async read({ atomClass, options, key, user }) {\n      // super\n      const item = await super.read({ atomClass, options, key, user });\n      if (!item) return null;\n      // meta\n      this._getMeta(item);\n      // ok\n      return item;\n    }\n\n    async select({ atomClass, options, items, user }) {\n      // super\n      await super.select({ atomClass, options, items, user });\n      // meta\n      for (const item of items) {\n        this._getMeta(item);\n      }\n    }\n\n    async write({ atomClass, target, key, item, options, user }) {\n      // super\n      await super.write({ atomClass, target, key, item, options, user });\n      // update product\n      const data = await this.ctx.model.product.prepareData(item);\n      data.id = key.itemId;\n      await this.ctx.model.product.update(data);\n    }\n\n    async delete({ atomClass, key, user }) {\n      // delete product\n      await this.ctx.model.product.delete({\n        id: key.itemId,\n      });\n      // super\n      await super.delete({ atomClass, key, user });\n    }\n\n    _getMeta(item) {\n      // flags\n      const flags = [];\n      const price = (item.productPrice / 100).toFixed(2);\n      flags.push(price);\n      // meta\n      const meta = {\n        summary: item.productCode,\n        flags,\n      };\n      // ok\n      item._meta = meta;\n    }\n\n  }\n\n  return Atom;\n};\n","module.exports = app => {\n\n  class Atom extends app.meta.AtomBase {\n\n    async create({ atomClass, item, user }) {\n      // super\n      const key = await super.create({ atomClass, item, user });\n      // add purchaseOrder\n      const res = await this.ctx.model.purchaseOrder.insert({\n        atomId: key.atomId,\n      });\n      // return key\n      return { atomId: key.atomId, itemId: res.insertId };\n    }\n\n    async read({ atomClass, options, key, user }) {\n      // super\n      const item = await super.read({ atomClass, options, key, user });\n      if (!item) return null;\n      // meta\n      this._getMeta(item);\n      // ok\n      return item;\n    }\n\n    async select({ atomClass, options, items, user }) {\n      // super\n      await super.select({ atomClass, options, items, user });\n      // meta\n      for (const item of items) {\n        this._getMeta(item);\n      }\n    }\n\n    async write({ atomClass, target, key, item, options, user }) {\n      // super\n      await super.write({ atomClass, target, key, item, options, user });\n      // update purchaseOrder\n      const data = await this.ctx.model.purchaseOrder.prepareData(item);\n      data.id = key.itemId;\n      await this.ctx.model.purchaseOrder.update(data);\n    }\n\n    async delete({ atomClass, key, user }) {\n      // delete purchaseOrder\n      await this.ctx.model.purchaseOrder.delete({\n        id: key.itemId,\n      });\n      // super\n      await super.delete({ atomClass, key, user });\n    }\n\n    _getMeta(item) {\n      // flags\n      const flags = [];\n      if (item.detailsCount > 0) {\n        flags.push(item.detailsCount);\n      }\n      const detailsAmount = (item.detailsAmount / 100).toFixed(2);\n      flags.push(detailsAmount);\n      // meta\n      const meta = {\n        flags,\n      };\n      // ok\n      item._meta = meta;\n    }\n\n  }\n\n  return Atom;\n};\n","module.exports = app => {\n\n  class Detail extends app.meta.DetailBase {\n\n    async create({ atomKey, detailClass, item, user }) {\n      // super\n      const key = await super.create({ atomKey, detailClass, item, user });\n      // add purchaseOrder detail\n      const res = await this.ctx.model.purchaseOrderDetail.insert({\n        atomId: atomKey.atomId,\n        detailId: key.detailId,\n      });\n      // return key\n      return { detailId: key.detailId, detailItemId: res.insertId };\n    }\n\n    async read({ detailClass, options, key, user }) {\n      // super\n      const item = await super.read({ detailClass, options, key, user });\n      if (!item) return null;\n      // meta\n      this._getMeta(item);\n      // ok\n      return item;\n    }\n\n    async select({ atomKey, detailClass, options, items, user }) {\n      // super\n      await super.select({ atomKey, detailClass, options, items, user });\n      // meta\n      for (const item of items) {\n        this._getMeta(item);\n      }\n    }\n\n    async write({ detailClass, target, key, item, options, user }) {\n      // super\n      await super.write({ detailClass, target, key, item, options, user });\n      // update purchaseOrder detail\n      const data = await this.ctx.model.purchaseOrderDetail.prepareData(item);\n      data.id = key.detailItemId;\n      // update\n      await this.ctx.model.purchaseOrderDetail.update(data);\n    }\n\n    async delete({ detailClass, target, key, user }) {\n      // delete purchaseOrder detail\n      await this.ctx.model.purchaseOrderDetail.delete({\n        id: key.detailItemId,\n      });\n      // super\n      await super.delete({ detailClass, target, key, user });\n    }\n\n    _getMeta(item) {\n      // flags\n      const flags = [];\n      if (item.quantity > 1) {\n        flags.push(item.quantity);\n      }\n      const amount = (item.amount / 100).toFixed(2);\n      flags.push(amount);\n      // meta\n      const meta = {\n        summary: item.detailCode,\n        flags,\n      };\n      // ok\n      item._meta = meta;\n    }\n\n  }\n\n  return Detail;\n};\n","module.exports = ctx => {\n  class FlowService extends ctx.app.meta.FlowServiceBase {\n    async execute(context) {\n      // parameter\n      const { flowDefId, parameter, node } = context.parameter;\n      // start\n      await ctx.bean.flow.startById({\n        flowDefId,\n        flowVars: parameter,\n        flowUserId: 1,\n        startEventId: node.id,\n      });\n    }\n  }\n  return FlowService;\n};\n","module.exports = ctx => {\n  class FlowService extends ctx.app.meta.FlowServiceBase {\n    async execute(context) {\n      // parameter\n      const parameter = context.parameter;\n      // set var\n      context.contextNode.vars.set('echo', parameter);\n      // return\n      return parameter;\n    }\n  }\n  return FlowService;\n};\n","module.exports = app => {\n  class Version extends app.meta.BeanBase {\n\n    async update(options) {\n      if (options.version === 1) {\n        // create table: testFlowPurchaseOrder\n        const sql = `\n          CREATE TABLE testFlowPurchaseOrder (\n            id int(11) NOT NULL AUTO_INCREMENT,\n            createdAt timestamp NOT NULL DEFAULT CURRENT_TIMESTAMP,\n            updatedAt timestamp NOT NULL DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP,\n            deleted int(11) DEFAULT '0',\n            iid int(11) DEFAULT '0',\n            atomId int(11) DEFAULT '0',\n            description varchar(255) DEFAULT NULL,\n            _flowDefKey varchar(255) DEFAULT NULL,\n            PRIMARY KEY (id)\n          )\n        `;\n        await this.ctx.model.query(sql);\n      }\n\n      if (options.version === 2) {\n        // create table: testFlowProduct\n        let sql = `\n          CREATE TABLE testFlowProduct (\n            id int(11) NOT NULL AUTO_INCREMENT,\n            createdAt timestamp NOT NULL DEFAULT CURRENT_TIMESTAMP,\n            updatedAt timestamp NOT NULL DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP,\n            deleted int(11) DEFAULT '0',\n            iid int(11) DEFAULT '0',\n            atomId int(11) DEFAULT '0',\n            productCode varchar(50) DEFAULT NULL,\n            productPrice int(11) DEFAULT '0',\n            PRIMARY KEY (id)\n          )\n        `;\n        await this.ctx.model.query(sql);\n\n        // create table: testFlowPurchaseOrderDetail\n        sql = `\n          CREATE TABLE testFlowPurchaseOrderDetail (\n            id int(11) NOT NULL AUTO_INCREMENT,\n            createdAt timestamp NOT NULL DEFAULT CURRENT_TIMESTAMP,\n            updatedAt timestamp NOT NULL DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP,\n            deleted int(11) DEFAULT '0',\n            iid int(11) DEFAULT '0',\n            atomId int(11) DEFAULT '0',\n            detailId int(11) DEFAULT '0',\n            price int(11) DEFAULT '0',\n            quantity int(11) DEFAULT '0',\n            amount int(11) DEFAULT '0',\n            PRIMARY KEY (id)\n          )\n        `;\n        await this.ctx.model.query(sql);\n\n        // alter table: testFlowPurchaseOrder\n        sql = `\n          ALTER TABLE testFlowPurchaseOrder\n            ADD COLUMN detailsCount int(11) DEFAULT '0',\n            ADD COLUMN detailsAmount int(11) DEFAULT '0'\n        `;\n        await this.ctx.model.query(sql);\n\n      }\n    }\n\n    async init(options) {\n      if (options.version === 1) {\n        // add role rights\n        const roleRights = [\n          { roleName: 'authenticated', action: 'create' },\n          { roleName: 'authenticated', action: 'read', scopeNames: 0 },\n          { roleName: 'authenticated', action: 'write', scopeNames: 0 },\n          { roleName: 'authenticated', action: 'delete', scopeNames: 0 },\n          { roleName: 'authenticated', action: 'clone', scopeNames: 0 },\n          { roleName: 'authenticated', action: 'deleteBulk' },\n          { roleName: 'authenticated', action: 'exportBulk' },\n          { roleName: 'system', action: 'read', scopeNames: 'authenticated' },\n        ];\n        await this.ctx.bean.role.addRoleRightBatch({ atomClassName: 'purchaseOrder', roleRights });\n      }\n      if (options.version === 2) {\n        // add role rights\n        const roleRights = [\n          { roleName: 'authenticated', action: 'create' },\n          { roleName: 'authenticated', action: 'read', scopeNames: 0 },\n          { roleName: 'authenticated', action: 'write', scopeNames: 0 },\n          { roleName: 'authenticated', action: 'delete', scopeNames: 0 },\n          { roleName: 'authenticated', action: 'clone', scopeNames: 0 },\n          { roleName: 'authenticated', action: 'deleteBulk' },\n          { roleName: 'authenticated', action: 'exportBulk' },\n          { roleName: 'system', action: 'read', scopeNames: 'authenticated' },\n        ];\n        await this.ctx.bean.role.addRoleRightBatch({ atomClassName: 'product', roleRights });\n      }\n    }\n\n    async test() {\n    }\n\n  }\n\n  return Version;\n};\n","const versionManager = require('./bean/version.manager.js');\nconst atomPurchaseOrder = require('./bean/atom.purchaseOrder.js');\nconst atomProduct = require('./bean/atom.product.js');\nconst detailPurchaseOrder = require('./bean/detail.purchaseOrder.js');\nconst flowServiceTest = require('./bean/flow.service.test.js');\nconst flowServiceStartEventTimer = require('./bean/flow.service.startEventTimer.js');\n\nmodule.exports = app => {\n  const beans = {\n    // version\n    'version.manager': {\n      mode: 'app',\n      bean: versionManager,\n    },\n    // atom\n    'atom.purchaseOrder': {\n      mode: 'app',\n      bean: atomPurchaseOrder,\n    },\n    'atom.product': {\n      mode: 'app',\n      bean: atomProduct,\n    },\n    // detail\n    'detail.purchaseOrder': {\n      mode: 'app',\n      bean: detailPurchaseOrder,\n    },\n    // flow\n    'flow.service.test': {\n      title: 'Test',\n      mode: 'ctx',\n      bean: flowServiceTest,\n    },\n    'flow.service.startEventTimer': {\n      title: 'StartTestFlow',\n      mode: 'ctx',\n      bean: flowServiceStartEventTimer,\n    },\n  };\n  return beans;\n};\n","// eslint-disable-next-line\nmodule.exports = appInfo => {\n  const config = {};\n  return config;\n};\n","// error code should start from 1001\nmodule.exports = {\n};\n","module.exports = {\n  StartTestFlow: 'Start Test Flow',\n};\n","module.exports = {\n  Product: '产品',\n  'Create Product': '新建产品',\n  'Product List': '产品列表',\n  'Purchase Order': '采购订单',\n  'Create Purchase Order': '新建采购订单',\n  'Purchase Order List': '采购订单列表',\n  'Product Code Exists': '产品编码已存在',\n  'WorkFlow Test': '工作流测试',\n  Test_Set00_Simple: '测试_分组00_简单流程',\n  StartTestFlow: '启动测试工作流',\n};\n","module.exports = {\n  'en-us': require('./locale/en-us.js'),\n  'zh-cn': require('./locale/zh-cn.js'),\n};\n","const require3 = require('require3');\nconst assert = require3('assert');\n\nmodule.exports = class Listener {\n  constructor(context) {\n    this.context = context;\n  }\n\n  async onNodeBegin(contextNode) {\n    if (contextNode._nodeDef.id === 'activity_1') {\n      this.context.vars.set('echo', 'hello');\n    }\n  }\n\n  async onNodeDoing(contextNode) {\n    if (contextNode._nodeDef.id === 'activity_2') {\n      // execute activity service\n      const res = await contextNode.utils.executeService({\n        bean: {\n          module: 'test-flow',\n          name: 'test',\n        },\n        parameter: 'hello world',\n      });\n      assert.equal(res, 'hello world');\n    }\n  }\n\n  async onNodeEnd(contextNode) {\n    if (contextNode._nodeDef.id === 'activity_1') {\n      const echo = contextNode.vars.get('echo');\n      assert.equal(echo, 'hello');\n    }\n  }\n\n};\n","module.exports = class Listener {\n  constructor(context) {\n    this.context = context;\n  }\n\n  async onNodeEnter(contextNode) {\n    if (contextNode._nodeDef.id === 'startEvent_1') {\n      // nodeVars\n      const x = this.context.vars.get('x');\n      contextNode.vars.set('x', x);\n    }\n  }\n\n};\n","const require3 = require('require3');\nconst assert = require3('assert');\n\nmodule.exports = class Listener {\n  constructor(context) {\n    this.context = context;\n  }\n\n  async onFlowStart(options) {\n    console.log('onFlowStart: ', options.startEventId);\n    // flowVars\n    const xyz = this.context.vars.get('x.y.z');\n    assert.equal(xyz, undefined);\n    this.context.vars.set('x.y.z', 'flow');\n  }\n\n  async onFlowEnd(options) {\n    console.log('onFlowEnd: ', options && options.flowRemark);\n    // flowVars\n    const xyz = this.context.vars.get('x.y.z');\n    assert.equal(xyz, 'flow');\n  }\n\n  async onNodeEnter(contextNode) {\n    console.log('onNodeEnter: ', contextNode._nodeDef.id);\n    // nodeVars\n    const xyz = contextNode.vars.get('x.y.z');\n    assert.equal(xyz, undefined);\n    contextNode.vars.set('x.y.z', contextNode._nodeDef.id);\n  }\n\n  async onNodeBegin(contextNode) {\n    console.log('onNodeBegin: ', contextNode._nodeDef.id);\n  }\n\n  async onNodeDoing(contextNode) {\n    console.log('onNodeDoing: ', contextNode._nodeDef.id);\n  }\n\n  async onNodeEnd(contextNode) {\n    console.log('onNodeEnd: ', contextNode._nodeDef.id);\n  }\n\n  async onNodeLeave(contextNode) {\n    console.log('onNodeLeave: ', contextNode._nodeDef.id);\n    // nodeVars\n    const xyz = contextNode.vars.get('x.y.z');\n    assert.equal(xyz, contextNode._nodeDef.id);\n  }\n\n  async onEdgeEnter(contextEdge, contextNode) {\n    console.log('onEdgeEnter: ', contextEdge._edgeDef.id, ' from node: ', contextNode._nodeDef.id);\n  }\n\n  async onEdgeTake(contextEdge, contextNode) {\n    console.log('onEdgeTake: ', contextEdge._edgeDef.id, ' from node: ', contextNode._nodeDef.id);\n  }\n\n  async onEdgeLeave(contextEdge, contextNode) {\n    console.log('onEdgeLeave: ', contextEdge._edgeDef.id, ' from node: ', contextNode._nodeDef.id);\n  }\n\n  getNodeDefOptions(contextNode /* { options }*/) {\n    console.log('getNodeDefOptions: ', contextNode._nodeDef.id);\n  }\n\n};\n","const require3 = require('require3');\nconst assert = require3('assert');\n\nmodule.exports = class Listener {\n  constructor(context) {\n    this.context = context;\n  }\n\n  async onNodeEnter(contextNode) {\n    if (contextNode._nodeDef.id === 'startEvent_1') {\n      const _flowDefKey = this.context.atom._flowDefKey;\n      assert.equal(_flowDefKey, 'set01_atomUserTask');\n    }\n  }\n\n  async onTaskCreated(contextTask, contextNode) {\n    console.log('onTaskCreated: ', contextTask._flowTaskId, ' of node: ', contextNode._nodeDef.id);\n  }\n\n  async onTaskClaimed(contextTask, contextNode) {\n    console.log('onTaskClaimed: ', contextTask._flowTaskId, ' of node: ', contextNode._nodeDef.id);\n  }\n\n  async onTaskCompleted(contextTask, contextNode) {\n    console.log('onTaskCompleted: ', contextTask._flowTaskId, ' of node: ', contextNode._nodeDef.id);\n    console.log('handleStatus: %d, handleRemark: %s', contextTask._flowTask.handleStatus, contextTask._flowTask.handleRemark);\n  }\n\n  async getSchemaRead(contextTask, contextNode/* { schemaBase, schema }*/) {\n    console.log('getSchemaRead: ', contextTask._flowTaskId, ' of node: ', contextNode._nodeDef.id);\n  }\n\n  async getSchemaWrite(contextTask, contextNode/* { schemaBase, schema }*/) {\n    console.log('getSchemaWrite: ', contextTask._flowTaskId, ' of node: ', contextNode._nodeDef.id);\n  }\n\n  getNodeDefOptions(contextNode /* { options }*/) {\n    console.log('getNodeDefOptions: ', contextNode._nodeDef.id);\n  }\n\n};\n","const require3 = require('require3');\nconst assert = require3('assert');\n\nmodule.exports = class Listener {\n  constructor(context) {\n    this.context = context;\n  }\n\n  async onNodeEnter(contextNode) {\n    if (contextNode._nodeDef.id === 'startEvent_1') {\n      const _flowDefKey = this.context.atom._flowDefKey;\n      assert.equal(_flowDefKey, 'set01_startEventAtom');\n    }\n  }\n\n};\n","module.exports = app => {\n  const content = {\n    process: {\n      nodes: [\n        {\n          id: 'startEvent_1',\n          name: 'Start',\n          type: 'startEventNone',\n        },\n        {\n          id: 'activity_1',\n          name: 'ActivityNone',\n          type: 'activityNone',\n        },\n        {\n          id: 'endEvent_1',\n          name: 'End',\n          type: 'endEventNone',\n        },\n      ],\n      edges: [\n        {\n          id: 'edge_1',\n          source: 'startEvent_1',\n          target: 'activity_1',\n        },\n        {\n          id: 'edge_2',\n          source: 'activity_1',\n          target: 'endEvent_1',\n        },\n      ],\n    },\n  };\n  const definition = {\n    atomName: 'Test_Set00_Activity_None',\n    atomStaticKey: 'set00_activityNone',\n    atomRevision: 0,\n    description: '',\n    content: JSON.stringify(content),\n  };\n  return definition;\n};\n","const Listener = require('./listener/set00_activityService.spec.js');\n\nmodule.exports = app => {\n  const moduleInfo = app.meta.mockUtil.parseInfoFromPackage(__dirname);\n  const content = {\n    listener: Listener.toString(),\n    process: {\n      nodes: [\n        {\n          id: 'startEvent_1',\n          name: 'Start',\n          type: 'startEventNone',\n        },\n        {\n          id: 'activity_1',\n          name: 'ActivityService',\n          type: 'activityService',\n          options: {\n            bean: {\n              module: moduleInfo.relativeName,\n              name: 'test',\n            },\n            parameterExpression: 'context.vars.get(\\`echo\\`)',\n          },\n        },\n        {\n          id: 'activity_2',\n          name: 'ActivityNone',\n          type: 'activityNone',\n        },\n        {\n          id: 'endEvent_1',\n          name: 'End',\n          type: 'endEventNone',\n        },\n      ],\n      edges: [\n        {\n          id: 'edge_1',\n          source: 'startEvent_1',\n          target: 'activity_1',\n        },\n        {\n          id: 'edge_2',\n          source: 'activity_1',\n          target: 'activity_2',\n        },\n        {\n          id: 'edge_3',\n          source: 'activity_2',\n          target: 'endEvent_1',\n        },\n      ],\n    },\n  };\n  const definition = {\n    atomName: 'Test_Set00_Activity_Service',\n    atomStaticKey: 'set00_activityService',\n    atomRevision: 0,\n    description: '',\n    content: JSON.stringify(content),\n  };\n  return definition;\n};\n","const Listener = require('./listener/set00_edgeSequence.spec.js');\n\nmodule.exports = app => {\n  const content = {\n    listener: Listener.toString(),\n    process: {\n      nodes: [\n        {\n          id: 'startEvent_1',\n          name: 'Start',\n          type: 'startEventNone',\n        },\n        {\n          id: 'endEvent_1',\n          name: 'End',\n          type: 'endEventNone',\n        },\n        {\n          id: 'endEvent_2',\n          name: 'End',\n          type: 'endEventNone',\n        },\n      ],\n      edges: [\n        {\n          id: 'edge_1',\n          name: 'x=1',\n          source: 'startEvent_1',\n          target: 'endEvent_1',\n          options: {\n            conditionExpression: 'context.vars.get(\\'x\\')===1',\n          },\n        },\n        {\n          id: 'edge_2',\n          name: 'x=2',\n          source: 'startEvent_1',\n          target: 'endEvent_2',\n          options: {\n            conditionExpression: `\n              const x=contextNode.vars.get('x');\n              x===2;\n            `,\n          },\n        },\n      ],\n    },\n  };\n  const definition = {\n    atomName: 'Test_Set00_Edge_Sequence',\n    atomStaticKey: 'set00_edgeSequence',\n    atomRevision: 1,\n    description: '',\n    content: JSON.stringify(content),\n  };\n  return definition;\n};\n","const Listener = require('./listener/set00_simple.spec.js');\n\nmodule.exports = app => {\n  const content = {\n    listener: Listener.toString(),\n    process: {\n      nodes: [\n        {\n          id: 'startEvent_1',\n          name: 'Start',\n          type: 'startEventNone',\n        },\n        {\n          id: 'endEvent_1',\n          name: 'End',\n          type: 'endEventNone',\n        },\n      ],\n      edges: [\n        {\n          id: 'edge_1',\n          source: 'startEvent_1',\n          target: 'endEvent_1',\n        },\n      ],\n    },\n  };\n  const definition = {\n    atomName: 'Test_Set00_Simple',\n    atomStaticKey: 'set00_simple',\n    atomRevision: 0,\n    description: '',\n    content: JSON.stringify(content),\n  };\n  return definition;\n};\n","module.exports = app => {\n  const moduleInfo = app.meta.mockUtil.parseInfoFromPackage(__dirname);\n  const content = {\n    listener: null,\n    process: {\n      nodes: [\n        {\n          id: 'startEvent_1',\n          name: 'Drafting',\n          type: 'startEventAtom',\n          options: {\n            atom: {\n              module: moduleInfo.relativeName,\n              atomClassName: 'purchaseOrder',\n            },\n            conditionExpression: 'atom._flowDefKey===\\'set01_atomAssigneesConfirmation\\'',\n          },\n        },\n        {\n          id: 'activity_1',\n          name: 'Review',\n          type: 'activityUserTask',\n          options: {\n            assignees: {\n              roles: 'family',\n            },\n            confirmation: true,\n            bidding: true,\n          },\n        },\n        {\n          id: 'endEvent_1',\n          name: 'End',\n          type: 'endEventAtom',\n        },\n      ],\n      edges: [\n        {\n          id: 'edge_1',\n          source: 'startEvent_1',\n          target: 'activity_1',\n        },\n        {\n          id: 'edge_2',\n          source: 'activity_1',\n          target: 'endEvent_1',\n        },\n      ],\n    },\n  };\n  const definition = {\n    atomName: 'Test_Set01_Atom_AssigneesConfirmation',\n    atomStaticKey: 'set01_atomAssigneesConfirmation',\n    atomRevision: 0,\n    description: '',\n    content: JSON.stringify(content),\n  };\n  return definition;\n};\n","const Listener = require('./listener/set01_atomUserTask.spec.js');\n\nmodule.exports = app => {\n  const moduleInfo = app.meta.mockUtil.parseInfoFromPackage(__dirname);\n  const content = {\n    listener: Listener.toString(),\n    process: {\n      nodes: [\n        {\n          id: 'startEvent_1',\n          name: 'Drafting',\n          type: 'startEventAtom',\n          options: {\n            atom: {\n              module: moduleInfo.relativeName,\n              atomClassName: 'purchaseOrder',\n            },\n            conditionExpression: 'atom._flowDefKey===\\'set01_atomUserTask\\'',\n          },\n        },\n        {\n          id: 'activity_1',\n          name: 'Review',\n          type: 'activityUserTask',\n          options: {\n            assignees: {\n              // users: '1,2',\n              // roles: '1,2',\n              vars: 'flowUser',\n            },\n            confirmation: false,\n            bidding: false,\n            completionCondition: {\n              // passed: 1,\n              // rejected: '100%',\n            },\n            // rejectedNode:null,\n            // allowRejectTask: true,\n            // allowCancelFlow: false,\n            schema: {\n              write: [\n                'atomName',\n                {\n                  name: 'description',\n                  property: {\n                    type: 'string',\n                    ebType: 'text',\n                    ebTitle: 'Description',\n                  },\n                },\n              ],\n            },\n          },\n        },\n        {\n          id: 'endEvent_1',\n          name: 'End',\n          type: 'endEventAtom',\n        },\n      ],\n      edges: [\n        {\n          id: 'edge_1',\n          source: 'startEvent_1',\n          target: 'activity_1',\n        },\n        {\n          id: 'edge_2',\n          source: 'activity_1',\n          target: 'endEvent_1',\n        },\n      ],\n    },\n  };\n  const definition = {\n    atomName: 'Test_Set01_Atom_UserTask',\n    atomStaticKey: 'set01_atomUserTask',\n    atomRevision: 0,\n    description: '',\n    content: JSON.stringify(content),\n  };\n  return definition;\n};\n","const Listener = require('./listener/set01_startEventAtom.spec.js');\n\nmodule.exports = app => {\n  const moduleInfo = app.meta.mockUtil.parseInfoFromPackage(__dirname);\n  const content = {\n    listener: Listener.toString(),\n    process: {\n      nodes: [\n        {\n          id: 'startEvent_1',\n          name: 'Drafting',\n          type: 'startEventAtom',\n          options: {\n            atom: {\n              module: moduleInfo.relativeName,\n              atomClassName: 'purchaseOrder',\n            },\n            conditionExpression: 'atom._flowDefKey===\\'set01_startEventAtom\\'',\n          },\n        },\n        {\n          id: 'activity_1',\n          name: 'ActivityNone',\n          type: 'activityNone',\n        },\n        {\n          id: 'endEvent_1',\n          name: 'End',\n          type: 'endEventAtom',\n        },\n      ],\n      edges: [\n        {\n          id: 'edge_1',\n          source: 'startEvent_1',\n          target: 'activity_1',\n        },\n        {\n          id: 'edge_2',\n          source: 'activity_1',\n          target: 'endEvent_1',\n        },\n      ],\n    },\n  };\n  const definition = {\n    atomName: 'Test_Set01_StartEvent_Atom',\n    atomStaticKey: 'set01_startEventAtom',\n    atomRevision: 0,\n    description: '',\n    content: JSON.stringify(content),\n  };\n  return definition;\n};\n","const set00_simple = require('./flowDef/set00_simple.js');\nconst set00_edgeSequence = require('./flowDef/set00_edgeSequence.js');\nconst set00_activityNone = require('./flowDef/set00_activityNone.js');\nconst set00_activityService = require('./flowDef/set00_activityService.js');\n// const set00_startEventTimer = require('./flowDef/set00_startEventTimer.js');\nconst set01_startEventAtom = require('./flowDef/set01_startEventAtom.js');\nconst set01_atomUserTask = require('./flowDef/set01_atomUserTask.js');\nconst set01_atomAssigneesConfirmation = require('./flowDef/set01_atomAssigneesConfirmation.js');\n\nmodule.exports = app => {\n  const flowDefs = [\n    set00_simple(app),\n    set00_edgeSequence(app),\n    set00_activityNone(app),\n    set00_activityService(app),\n    //  set00_startEventTimer(app),\n    set01_startEventAtom(app),\n    set01_atomUserTask(app),\n    set01_atomAssigneesConfirmation(app),\n  ];\n  return flowDefs;\n};\n","module.exports = app => {\n  // const moduleInfo = app.meta.mockUtil.parseInfoFromPackage(__dirname);\n  const products = [\n    // Apple\n    {\n      atomName: 'Apple',\n      atomStaticKey: 'apple',\n      atomRevision: 0,\n      productCode: 'test-001',\n      productPrice: 1200,\n    },\n    // Pear\n    {\n      atomName: 'Pear',\n      atomStaticKey: 'pear',\n      atomRevision: 0,\n      productCode: 'test-002',\n      productPrice: 1000,\n    },\n    // Banana\n    {\n      atomName: 'Banana',\n      atomStaticKey: 'banana',\n      atomRevision: 0,\n      productCode: 'test-003',\n      productPrice: 1300,\n    },\n  ];\n  return products;\n};\n","module.exports = app => {\n  const moduleInfo = app.meta.mockUtil.parseInfoFromPackage(__dirname);\n  const resources = [\n    // menu: purchase order\n    {\n      atomName: 'Create Purchase Order',\n      atomStaticKey: 'createPurchaseOrder',\n      atomRevision: 0,\n      atomCategoryId: 'a-base:menu.Create',\n      resourceType: 'a-base:menu',\n      resourceConfig: JSON.stringify({\n        module: moduleInfo.relativeName,\n        atomClassName: 'purchaseOrder',\n        atomAction: 'create',\n      }),\n      resourceRoles: 'authenticated',\n    },\n    {\n      atomName: 'Purchase Order List',\n      atomStaticKey: 'listPurchaseOrder',\n      atomRevision: 0,\n      atomCategoryId: 'a-base:menu.List',\n      resourceType: 'a-base:menu',\n      resourceConfig: JSON.stringify({\n        module: moduleInfo.relativeName,\n        atomClassName: 'purchaseOrder',\n        atomAction: 'read',\n      }),\n      resourceRoles: 'authenticated',\n    },\n    // menu: product\n    {\n      atomName: 'Create Product',\n      atomStaticKey: 'createProduct',\n      atomRevision: 0,\n      atomCategoryId: 'a-base:menu.Create',\n      resourceType: 'a-base:menu',\n      resourceConfig: JSON.stringify({\n        module: moduleInfo.relativeName,\n        atomClassName: 'product',\n        atomAction: 'create',\n      }),\n      resourceRoles: 'authenticated',\n    },\n    {\n      atomName: 'Product List',\n      atomStaticKey: 'listProduct',\n      atomRevision: 0,\n      atomCategoryId: 'a-base:menu.List',\n      resourceType: 'a-base:menu',\n      resourceConfig: JSON.stringify({\n        module: moduleInfo.relativeName,\n        atomClassName: 'product',\n        atomAction: 'read',\n      }),\n      resourceRoles: 'authenticated',\n    },\n  ];\n  return resources;\n};\n","module.exports = app => {\n  const keywords = {};\n  keywords.productCode = {\n    async: true,\n    type: 'string',\n    errors: true,\n    compile() {\n      return async function(data/* , path, rootData , name*/) {\n        // ignore if empty\n        if (!data) return true;\n        // ctx\n        const ctx = this;\n        // validateHost\n        if (!ctx.meta || !ctx.meta.validateHost) {\n          // not check\n          return true;\n        }\n        const atomId = ctx.meta.validateHost.key.atomId;\n        const item = await ctx.model.queryOne(`\n          select a.id from aAtom a\n            left join testFlowProduct b on a.id=b.atomId\n              where a.atomStage=0 and a.iid=? and a.deleted=0 and b.productCode=?\n          `, [ ctx.instance.id, data ]);\n        if (item && item.id !== atomId) {\n          const errors = [{ keyword: 'x-productCode', params: [], message: ctx.text('Product Code Exists') }];\n          throw new app.meta.ajv.ValidationError(errors);\n        }\n        return true;\n      };\n    },\n  };\n  return keywords;\n};\n","module.exports = app => {\n  const schemas = {};\n  // product\n  schemas.product = {\n    type: 'object',\n    properties: {\n      atomName: {\n        type: 'string',\n        ebType: 'text',\n        ebTitle: 'Product Name',\n        notEmpty: true,\n      },\n      productCode: {\n        type: 'string',\n        ebType: 'text',\n        ebTitle: 'Product Code',\n        notEmpty: true,\n        'x-productCode': true,\n      },\n      productPrice: {\n        type: 'number',\n        ebType: 'text',\n        ebTitle: 'Product Price',\n        ebCurrency: true,\n        // notEmpty: true,\n      },\n    },\n  };\n  // product\n  schemas.productSearch = {\n    type: 'object',\n    properties: {\n      productCode: {\n        type: 'string',\n        ebType: 'text',\n        ebTitle: 'Product Code',\n      },\n    },\n  };\n  return schemas;\n};\n","module.exports = app => {\n  const moduleInfo = app.meta.mockUtil.parseInfoFromPackage(__dirname);\n  const schemas = {};\n  // purchase order\n  schemas.purchaseOrder = {\n    type: 'object',\n    properties: {\n      // Basic Info\n      __groupBasicInfo: {\n        ebType: 'group-flatten',\n        ebTitle: 'Basic Info',\n      },\n      atomName: {\n        type: 'string',\n        ebType: 'text',\n        ebTitle: 'Name',\n        notEmpty: true,\n      },\n      description: {\n        type: 'string',\n        ebType: 'text',\n        ebTitle: 'Description',\n      },\n      _flowDefKey: {\n        type: 'string',\n        ebType: 'select',\n        ebTitle: 'Flow Definition',\n        ebOptionsBlankAuto: true,\n        ebOptions: [\n          { title: 'Test_Set01_StartEvent_Atom', value: 'set01_startEventAtom' },\n          { title: 'Test_Set01_Atom_UserTask', value: 'set01_atomUserTask' },\n          { title: 'Test_Set01_Atom_AssigneesConfirmation', value: 'set01_atomAssigneesConfirmation' },\n        ],\n      },\n      // Stats\n      __groupStats: {\n        ebType: 'group-flatten',\n        ebTitle: 'Stats',\n      },\n      detailsCount: {\n        type: 'number',\n        ebType: 'detailsStat',\n        ebTitle: 'Quantity',\n        ebParams: {\n          detailClass: {\n            module: moduleInfo.relativeName,\n            detailClassName: 'default',\n          },\n          expression: 'details.length',\n        },\n        ebReadOnly: true,\n      },\n      detailsAmount: {\n        type: 'number',\n        ebType: 'detailsStat',\n        ebTitle: 'Amount',\n        ebParams: {\n          detailClass: {\n            module: moduleInfo.relativeName,\n            detailClassName: 'default',\n          },\n          expression: 'details.reduce(function(a,b){return a+b.amount;},0)',\n        },\n        ebAutoSubmit: true,\n        ebCurrency: true,\n        ebReadOnly: true,\n      },\n      // Details\n      __groupDetails: {\n        ebType: 'group-flatten',\n        ebTitle: 'Details',\n        ebGroupWhole: true,\n        ebParams: {\n          titleHidden: true,\n        },\n      },\n      details: {\n        ebType: 'details',\n        ebTitle: 'Details',\n        ebParams: {\n          detailClass: {\n            module: moduleInfo.relativeName,\n            detailClassName: 'default',\n          },\n        },\n      },\n      // __groupDetails2: {\n      //   ebType: 'group-flatten',\n      //   ebTitle: 'Details',\n      //   ebGroupWhole: true,\n      //   ebParams: {\n      //     titleHidden: true,\n      //   },\n      // },\n      // details_2: {\n      //   ebType: 'details',\n      //   ebTitle: 'Details 2',\n      //   ebParams: {\n      //     detailClass: {\n      //       module: moduleInfo.relativeName,\n      //       detailClassName: 'default',\n      //     },\n      //   },\n      // },\n    },\n  };\n  // purchase order search\n  schemas.purchaseOrderSearch = {\n    type: 'object',\n    properties: {\n      description: {\n        type: 'string',\n        ebType: 'text',\n        ebTitle: 'Description',\n      },\n    },\n  };\n  return schemas;\n};\n","module.exports = app => {\n  const schemas = {};\n  // detail\n  const __atomParams = {\n    target: '_self',\n    atomClass: {\n      module: 'test-flow',\n      atomClassName: 'product',\n    },\n    selectOptions: {},\n    atomId: 'detailCodeId',\n    mapper: {\n      detailCodeId: 'atomId',\n      detailCode: 'productCode',\n      detailName: 'atomName',\n      price: 'productPrice',\n    },\n  };\n  schemas.purchaseOrderDetail = {\n    type: 'object',\n    properties: {\n      detailCodeId: {\n        type: 'number',\n      },\n      detailCode: {\n        type: 'string',\n        ebType: 'atom',\n        ebTitle: 'Product Code',\n        ebParams: __atomParams,\n        notEmpty: true,\n      },\n      detailName: {\n        type: 'string',\n        ebType: 'text',\n        ebTitle: 'Product Name',\n        notEmpty: true,\n      },\n      price: {\n        type: 'number',\n        ebType: 'text',\n        ebTitle: 'Price',\n        ebCurrency: true,\n      },\n      quantity: {\n        type: 'number',\n        ebType: 'text',\n        ebTitle: 'Quantity',\n      },\n      amount: {\n        type: 'number',\n        ebType: 'text',\n        ebTitle: 'Amount',\n        ebComputed: {\n          expression: 'price * quantity',\n          dependencies: 'price,quantity',\n        },\n        ebCurrency: true,\n        ebReadOnly: true,\n      },\n    },\n  };\n  return schemas;\n};\n","const product = require('./schema/product.js');\nconst purchaseOrder = require('./schema/purchaseOrder.js');\nconst purchaseOrderDetail = require('./schema/purchaseOrderDetail.js');\n\nmodule.exports = app => {\n  const schemas = {};\n  // product\n  Object.assign(schemas, product(app));\n  // purchase order\n  Object.assign(schemas, purchaseOrder(app));\n  // purchase order detail\n  Object.assign(schemas, purchaseOrderDetail(app));\n  // ok\n  return schemas;\n};\n","module.exports = app => {\n\n  class FlowController extends app.Controller {\n\n    async start() {\n      // start\n      await this.ctx.bean.flow.startByKey({\n        flowDefKey: this.ctx.request.body.flowDefKey,\n        flowVars: this.ctx.request.body.flowVars,\n        flowUserId: this.ctx.state.user.op.id,\n      });\n      this.ctx.success();\n    }\n\n  }\n\n  return FlowController;\n};\n\n","const flow = require('./controller/flow.js');\n\nmodule.exports = app => {\n  const controllers = {\n    flow,\n  };\n  return controllers;\n};\n","const config = require('./config/config.js');\nconst locales = require('./config/locales.js');\nconst errors = require('./config/errors.js');\n\nmodule.exports = app => {\n\n  // aops\n  const aops = require('./aops.js')(app);\n  // beans\n  const beans = require('./beans.js')(app);\n  // routes\n  const routes = require('./routes.js')(app);\n  // controllers\n  const controllers = require('./controllers.js')(app);\n  // services\n  const services = require('./services.js')(app);\n  // models\n  const models = require('./models.js')(app);\n  // meta\n  const meta = require('./meta.js')(app);\n\n  return {\n    aops,\n    beans,\n    routes,\n    controllers,\n    services,\n    models,\n    config,\n    locales,\n    errors,\n    meta,\n  };\n\n};\n","const require3 = require('require3');\nconst extend = require3('extend2');\n\nmodule.exports = app => {\n  const meta = {\n  };\n  if (app.meta.isTest || app.meta.isLocal) {\n    const keywords = require('./config/validation/keywords.js')(app);\n    const schemas = require('./config/validation/schemas.js')(app);\n    const staticFlowDefs = require('./config/static/flowDefs.js')(app);\n    const staticResources = require('./config/static/resources.js')(app);\n    const staticProducts = require('./config/static/products.js')(app);\n    // meta\n    extend(true, meta, {\n      base: {\n        atoms: {\n          purchaseOrder: {\n            info: {\n              bean: 'purchaseOrder',\n              title: 'Purchase Order',\n              tableName: 'testFlowPurchaseOrder',\n              details: [ 'default' ],\n            },\n            actions: {\n            },\n            validator: 'purchaseOrder',\n            search: {\n              validator: 'purchaseOrderSearch',\n            },\n          },\n          product: {\n            info: {\n              bean: 'product',\n              title: 'Product',\n              tableName: 'testFlowProduct',\n            },\n            actions: {\n            },\n            validator: 'product',\n            search: {\n              validator: 'productSearch',\n            },\n          },\n        },\n        statics: {\n          'a-flow.flowDef': {\n            items: staticFlowDefs,\n          },\n          'a-base.resource': {\n            items: staticResources,\n          },\n          'test-flow.product': {\n            items: staticProducts,\n          },\n        },\n      },\n      detail: {\n        details: {\n          default: {\n            info: {\n              bean: 'purchaseOrder',\n              title: 'Details',\n              tableName: 'testFlowPurchaseOrderDetail',\n            },\n            actions: {\n            },\n            validator: 'purchaseOrderDetail',\n          },\n        },\n      },\n      validation: {\n        validators: {\n          // purchaseOrder\n          purchaseOrder: {\n            schemas: 'purchaseOrder',\n          },\n          purchaseOrderSearch: {\n            schemas: 'purchaseOrderSearch',\n          },\n          // product\n          product: {\n            schemas: 'product',\n          },\n          productSearch: {\n            schemas: 'productSearch',\n          },\n          // purchaseOrderDetail\n          purchaseOrderDetail: {\n            schemas: 'purchaseOrderDetail',\n          },\n        },\n        keywords: {\n          'x-productCode': keywords.productCode,\n        },\n        schemas,\n      },\n      index: {\n        indexes: {\n          testFlowProduct: 'createdAt,updatedAt,atomId,productCode',\n          testFlowPurchaseOrder: 'createdAt,updatedAt,atomId',\n          testFlowPurchaseOrderDetail: 'createdAt,updatedAt,atomId,detailId',\n        },\n      },\n    });\n  }\n  return meta;\n};\n","module.exports = app => {\n  class Product extends app.meta.Model {\n    constructor(ctx) {\n      super(ctx, { table: 'testFlowProduct', options: { disableDeleted: false } });\n    }\n  }\n  return Product;\n};\n","module.exports = app => {\n  class PurchaseOrder extends app.meta.Model {\n    constructor(ctx) {\n      super(ctx, { table: 'testFlowPurchaseOrder', options: { disableDeleted: false } });\n    }\n  }\n  return PurchaseOrder;\n};\n","module.exports = app => {\n  class PurchaseOrderDetail extends app.meta.Model {\n    constructor(ctx) {\n      super(ctx, { table: 'testFlowPurchaseOrderDetail', options: { disableDeleted: false } });\n    }\n  }\n  return PurchaseOrderDetail;\n};\n","const product = require('./model/product.js');\nconst purchaseOrder = require('./model/purchaseOrder.js');\nconst purchaseOrderDetail = require('./model/purchaseOrderDetail.js');\n\nmodule.exports = app => {\n  const models = {\n    product,\n    purchaseOrder,\n    purchaseOrderDetail,\n  };\n  return models;\n};\n","module.exports = app => {\n  let routes = [\n  ];\n  if (app.meta.isTest || app.meta.isLocal) {\n    routes = routes.concat([\n      // flow/start\n      { method: 'post', path: 'flow/start', controller: 'flow' /* , middlewares: 'test' */ },\n    ]);\n  }\n  return routes;\n};\n","module.exports = app => {\n  const services = {\n  };\n  return services;\n};\n","module.exports = require(\"require3\");;","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId](module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n","// startup\n// Load entry module and return exports\n// This entry module is referenced by other modules so it can't be inlined\nvar __webpack_exports__ = __webpack_require__(421);\n"],"sourceRoot":""}